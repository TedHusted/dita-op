Copyright (C) 2008 Claude Vedovini <http://vedovini.net/>.

This software is part of the DITA Open Platform <http://www.dita-op.org/>.

The DITA Open Platform is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The DITA Open Platform is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with The DITA Open Platform.  If not, see <http://www.gnu.org/licenses/>.

This is a DITA Open Toolkit plugin that enables the transformation
of a ditamap into a single HTML page fragment that can optionally be posted
to a blogging platform that supports the xmlrpc Blogger API.

Installation:
	Unzip the plugin in the "plugins" folder of your DITA-OT installation.
	At the root of your DITA-OT installation run the following command:
		anf -f integrate.xml 

Supportes properties:
	Following are the supported transformation options, those must be provided to 
	the DITA-OT build process when invoking the "wordpress" transtype.
	
	args.input (/path/to/my/map.ditamap):
		Path to the ditamap to transform
	
	out.ext (.inc): 
		Extension of the output file, defaults to ".inc"
		
	args.wp.toc (index):
		Root file name of the output file, defaults to the ditamap file name
		
	dita.extname (.xml):
		File extention of the DITA topic files, defaults to ".xml"
		
	args.wp.xmlrpc (http://myblog.com/xmlrpc.php):
		The url to the blog's xmlrpc API.
		if not set the transformation will not post to the post.
		
	args.wp.username (admin):
		Username used to post
		
	args.wp.password (password):
		Password used to post
		
	args.wp.postid (2):
		The id of the post. There must already be an existing post on the blog to 
		support this transformation, the post will be updated with the transformed
		content.
		
	args.wp.publish (yes|no):
		Indicates whether or not the post should be published, defaults to "yes".
		If set to "no" the post will be left draft, unless already published.
		
	args.wp.stripspaces (yes|no):
		If set to "yes" consecutive whitespaces in the transformed content will be
		reduced to a unique whitespace. Usefull when your blog transforms newlines 
		in <br> when posting. Defaults to "yes".
